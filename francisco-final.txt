Indexed grammar rules (11 in total):
0     $accept: p
1     p: tit ss
2     tit: TITLE TEXT '\n'
3     ss: s ss
4       | s
5     s: NOTE LEFT OF TEXT ':' TEXT '\n'
6      | TEXT '->' TEXT ':' TEXT '\n'
7      | LOOP TEXT '\n' ss END '\n'
8      | LOOP TEXT '\n' END '\n'
9      | ALT TEXT '\n' ss ELSE '\n' ss END '\n'
10     | ALT TEXT '\n' ss END '\n'

Grammar non-terminals (5 in total):
	$accept
	p
	s
	ss
	tit

Grammar terminals (12 in total):
	'->'
	':'
	'\n'
	ALT
	ELSE
	END
	LEFT
	LOOP
	NOTE
	OF
	TEXT
	TITLE

Working on parsing table... Done.

SUMMARY
Is the given grammar LALR(1)? Yes

State #0
	for terminal TITLE: shift and go to state 3
	for non-terminal tit: go to state 2
	for non-terminal p: go to state 1

State #1
	for terminal $end: accept 

State #2
	for terminal LOOP: shift and go to state 7
	for terminal NOTE: shift and go to state 8
	for terminal ALT: shift and go to state 6
	for terminal TEXT: shift and go to state 9
	for non-terminal ss: go to state 5
	for non-terminal s: go to state 4

State #3
	for terminal TEXT: shift and go to state 10

State #4
	for terminal ELSE: reduce using rule 4
	for terminal LOOP: shift and go to state 7
	for terminal NOTE: shift and go to state 8
	for terminal ALT: shift and go to state 6
	for terminal TEXT: shift and go to state 9
	for terminal $end: reduce using rule 4
	for terminal END: reduce using rule 4
	for non-terminal ss: go to state 11
	for non-terminal s: go to state 4

State #5
	for terminal $end: reduce using rule 1

State #6
	for terminal TEXT: shift and go to state 12

State #7
	for terminal TEXT: shift and go to state 13

State #8
	for terminal LEFT: shift and go to state 14

State #9
	for terminal '->': shift and go to state 15

State #10
	for terminal '\n': shift and go to state 16

State #11
	for terminal ELSE: reduce using rule 3
	for terminal $end: reduce using rule 3
	for terminal END: reduce using rule 3

State #12
	for terminal '\n': shift and go to state 17

State #13
	for terminal '\n': shift and go to state 18

State #14
	for terminal OF: shift and go to state 19

State #15
	for terminal TEXT: shift and go to state 20

State #16
	for terminal LOOP: reduce using rule 2
	for terminal NOTE: reduce using rule 2
	for terminal ALT: reduce using rule 2
	for terminal TEXT: reduce using rule 2

State #17
	for terminal LOOP: shift and go to state 7
	for terminal NOTE: shift and go to state 8
	for terminal ALT: shift and go to state 6
	for terminal TEXT: shift and go to state 9
	for non-terminal ss: go to state 21
	for non-terminal s: go to state 4

State #18
	for terminal LOOP: shift and go to state 7
	for terminal NOTE: shift and go to state 8
	for terminal ALT: shift and go to state 6
	for terminal TEXT: shift and go to state 9
	for terminal END: shift and go to state 23
	for non-terminal ss: go to state 22
	for non-terminal s: go to state 4

State #19
	for terminal TEXT: shift and go to state 24

State #20
	for terminal ':': shift and go to state 25

State #21
	for terminal ELSE: shift and go to state 26
	for terminal END: shift and go to state 27

State #22
	for terminal END: shift and go to state 28

State #23
	for terminal '\n': shift and go to state 29

State #24
	for terminal ':': shift and go to state 30

State #25
	for terminal TEXT: shift and go to state 31

State #26
	for terminal '\n': shift and go to state 32

State #27
	for terminal '\n': shift and go to state 33

State #28
	for terminal '\n': shift and go to state 34

State #29
	for terminal ELSE: reduce using rule 8
	for terminal LOOP: reduce using rule 8
	for terminal NOTE: reduce using rule 8
	for terminal ALT: reduce using rule 8
	for terminal TEXT: reduce using rule 8
	for terminal $end: reduce using rule 8
	for terminal END: reduce using rule 8

State #30
	for terminal TEXT: shift and go to state 35

State #31
	for terminal '\n': shift and go to state 36

State #32
	for terminal LOOP: shift and go to state 7
	for terminal NOTE: shift and go to state 8
	for terminal ALT: shift and go to state 6
	for terminal TEXT: shift and go to state 9
	for non-terminal ss: go to state 37
	for non-terminal s: go to state 4

State #33
	for terminal ELSE: reduce using rule 10
	for terminal LOOP: reduce using rule 10
	for terminal NOTE: reduce using rule 10
	for terminal ALT: reduce using rule 10
	for terminal TEXT: reduce using rule 10
	for terminal $end: reduce using rule 10
	for terminal END: reduce using rule 10

State #34
	for terminal ELSE: reduce using rule 7
	for terminal LOOP: reduce using rule 7
	for terminal NOTE: reduce using rule 7
	for terminal ALT: reduce using rule 7
	for terminal TEXT: reduce using rule 7
	for terminal $end: reduce using rule 7
	for terminal END: reduce using rule 7

State #35
	for terminal '\n': shift and go to state 38

State #36
	for terminal ELSE: reduce using rule 6
	for terminal LOOP: reduce using rule 6
	for terminal NOTE: reduce using rule 6
	for terminal ALT: reduce using rule 6
	for terminal TEXT: reduce using rule 6
	for terminal $end: reduce using rule 6
	for terminal END: reduce using rule 6

State #37
	for terminal END: shift and go to state 39

State #38
	for terminal ELSE: reduce using rule 5
	for terminal LOOP: reduce using rule 5
	for terminal NOTE: reduce using rule 5
	for terminal ALT: reduce using rule 5
	for terminal TEXT: reduce using rule 5
	for terminal $end: reduce using rule 5
	for terminal END: reduce using rule 5

State #39
	for terminal '\n': shift and go to state 40

State #40
	for terminal ELSE: reduce using rule 9
	for terminal LOOP: reduce using rule 9
	for terminal NOTE: reduce using rule 9
	for terminal ALT: reduce using rule 9
	for terminal TEXT: reduce using rule 9
	for terminal $end: reduce using rule 9
	for terminal END: reduce using rule 9

